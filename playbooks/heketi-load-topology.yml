---
- hosts: master
  remote_user: root
  gather_facts: no

  tasks:
   - name: Get the heketi service IP
     kubectl: action=get type=service name=heketi
     register: result
     when: servername is not defined or not servername

   - set_fact: servername="http://{{result["msg"].split('\\n')[1].split()[1]}}:{{port}}"
     when: (servername is not defined or not servername) and result["msg"].split('\\n')[1] is defined

   - fail: msg="Could not find the IP of heketi service running"
     when: servername is not defined or not servername


- hosts: master
  remote_user: root
  gather_facts: no
  connection: local

  tasks:
  - name: Create cluster, if not provided
    heketi: action=load user="{{ user }}"  userkey="{{ user_key }}" server="{{ servername }}"
    register: result
    when: cluster is not defined or not cluster or  cluster == " "

  - set_fact: cluster="{{ result['msg']['cluster_id'] }}"
    when: cluster is not defined or not cluster or cluster == " "

  - name: Load Heketi topology
    heketi: action=load user="{{ user }}"  userkey="{{ user_key }}" server="{{ servername }}"
            managehost={{ item.manage }} storagehost={{ item.storage }} zone={{ item.zone }}
            devices="{{ item.devices }}" filename="{{ topologyfile }}" cluster="{{ cluster }}"
    with_items: hdict
    register: result

  - debug: msg="{{ result.results[0]['msg'] }}"
